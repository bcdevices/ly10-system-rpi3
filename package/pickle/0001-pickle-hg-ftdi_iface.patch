diff -r c7147c7e7ed6 src/dotconf.c
--- a/src/dotconf.c	Mon Jul 20 02:26:52 2020 +0100
+++ b/src/dotconf.c	Mon Jul 20 15:50:16 2020 +0200
@@ -242,6 +242,9 @@
 			else if (mystrcasestr(line, "CONFIG=") == line) {
 				p.config = strtoul(&line[7], NULL, 0);
 			}
+			else if (mystrcasestr(line, "FTDI_IFACE=") == line) {
+				p.ftdi_iface = strtoul(&line[11], NULL, 0);
+			}
 			else if (mystrcasestr(line, "ERROR=") == line) {
 				p.error = strtoul(&line[6], NULL, 0);
 			}
diff -r c7147c7e7ed6 src/ftdi-bb.c
--- a/src/ftdi-bb.c	Mon Jul 20 02:26:52 2020 +0100
+++ b/src/ftdi-bb.c	Mon Jul 20 15:50:16 2020 +0200
@@ -86,8 +86,16 @@
 		return -1;
 	}
 
+	if (ftdi_set_interface(&handle, p.ftdi_iface) < 0) {
+		printf("%s: can't set interface [%s]\n", __func__,
+			ftdi_get_error_string(&handle));
+		return -1;
+	}
+
 	if (*p.usb_serial) {
 		if ((ftdi_usb_open_desc(&handle, 0x0403, 0x6015, NULL, p.usb_serial) < 0) &&
+			(ftdi_usb_open_desc(&handle, 0x0403, 0x6011, NULL, p.usb_serial) < 0) &&
+			(ftdi_usb_open_desc(&handle, 0x0403, 0x6010, NULL, p.usb_serial) < 0) &&
 			(ftdi_usb_open_desc(&handle, 0x0403, 0x6001, NULL, p.usb_serial) < 0)) {
 			printf("%s: can't open FT232R/FT230X device [%s] with serial ID %s\n",
 				__func__, ftdi_get_error_string(&handle), p.usb_serial);
@@ -95,6 +103,8 @@
 		}
 	} else {
 		if ((ftdi_usb_open(&handle, 0x0403, 0x6015) < 0) &&
+			(ftdi_usb_open(&handle, 0x0403, 0x6011) < 0) &&
+			(ftdi_usb_open(&handle, 0x0403, 0x6010) < 0) &&
 			(ftdi_usb_open(&handle, 0x0403, 0x6001) < 0)) {
 			printf("%s: can't open FT230X device [%s]\n", __func__,
 				ftdi_get_error_string(&handle));
@@ -102,6 +112,7 @@
 		}
 	}
 
+
 	/* All input */
 	if (ftdi_bb_bitmode(0x00) < 0)
 		return -1;
diff -r c7147c7e7ed6 src/pickle.h
--- a/src/pickle.h	Mon Jul 20 02:26:52 2020 +0100
+++ b/src/pickle.h	Mon Jul 20 15:50:16 2020 +0200
@@ -184,6 +184,7 @@
 	uint32_t config;	/* default 0 (disabled)     */
 	uint32_t baudrate;	/* STK500v2 baud rate       */
 	uint32_t mcp;		/* MCP23XXX I2C/SPI address */
+	uint16_t ftdi_iface;    /* FTDI interface index     */
 	uint16_t vpp;		/* TX/!MCLR/VPP             */
 	uint16_t pgc;		/* RTS/PGC CLOCK            */
 	uint16_t pgdo;		/* DTR/PGD DATA_OUT         */
